<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blog.manage.mapper.BlogTagMapper">
    
    <resultMap type="BlogTag" id="BlogTagResult">
        <result property="uid"    column="uid"    />
        <result property="tagName"    column="tag_name"    />
        <result property="status"    column="status"    />
        <result property="tagUsed"    column="tag_used"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="createBy"    column="create_by"    />
        <result property="updateBy"    column="update_by"    />
        <result property="sort"    column="sort"    />
    </resultMap>

    <sql id="selectBlogTagVo">
        select row_number()over() AS id, uid, tag_name, status, tag_used, create_time, update_time, create_by,update_by,sort from back_tag
    </sql>

    <select id="selectBlogTagList" parameterType="BlogTag" resultMap="BlogTagResult">
        <include refid="selectBlogTagVo"/>
        <where>  
            <if test="tagName != null  and tagName != ''"> and tag_name = #{tagName}</if>
            <if test="status != null "> and status = #{status}</if>
            <if test="tagUsed != null "> and tag_used = #{tagUsed}</if>
            <if test="sort != null "> and sort = #{sort}</if>
        </where>
    </select>
    
    <select id="selectBlogTagByUid" parameterType="String" resultMap="BlogTagResult">
        <include refid="selectBlogTagVo"/>
        where uid = #{uid}
    </select>
    <select id="selectBlogTagUidByUidName" resultType="java.lang.String">
        select uid
        from back_tag
        where tag_name=#{tagName}
    </select>

    <insert id="insertBlogTag" parameterType="BlogTag">
        insert into back_tag
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uid != null">uid,</if>
            <if test="tagName != null">tag_name,</if>
            <if test="status != null">status,</if>
            <if test="tagUsed != null">tag_used,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="createBy != null">create_by,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="sort != null">sort,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uid != null">#{uid},</if>
            <if test="tagName != null">#{tagName},</if>
            <if test="status != null">#{status},</if>
            <if test="tagUsed != null">#{tagUsed},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="sort != null">#{sort},</if>
         </trim>
    </insert>

    <update id="updateBlogTag" parameterType="BlogTag">
        update back_tag
        <trim prefix="SET" suffixOverrides=",">
            <if test="tagName != null">tag_name = #{tagName},</if>
            <if test="status != null">status = #{status},</if>
            <if test="tagUsed != null">tag_used = #{tagUsed},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="sort != null">sort = #{sort},</if>
        </trim>
        where uid = #{uid}
    </update>

    <delete id="deleteBlogTagByUid" parameterType="String">
        delete from back_tag where uid = #{uid}
    </delete>

    <delete id="deleteBlogTagByUids" parameterType="String">
        delete from back_tag where uid in 
        <foreach item="uid" collection="array" open="(" separator="," close=")">
            #{uid}
        </foreach>
    </delete>
</mapper>